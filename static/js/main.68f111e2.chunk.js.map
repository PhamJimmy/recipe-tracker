{"version":3,"sources":["RecipeCreate.js","Recipe.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","createRecipe","initialForm","name","cuisine","photo","ingredients","preparation","useState","formData","setFormData","handleChange","target","value","onSubmit","event","preventDefault","id","type","placeholder","required","onChange","Recipe","recipe","index","handleDelete","handleUpdate","updateForm","setUpdateForm","edit","setEdit","handleEdit","e","onClick","className","src","alt","RecipeList","recipes","content","map","key","RecipeData","App","setRecipes","indexToDel","currentRecipes","filter","newRecipeInfo","indexToUpdate","newRecipe","curRecipes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAqGeA,MAnGf,YAAyC,IAAjBC,EAAgB,EAAhBA,aAIhBC,EAAc,CAClBC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,YAAa,GACbC,YAAa,IAGf,EAAgCC,mBAAS,eAAKN,IAA9C,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBF,EAAY,2BACPD,GADM,kBAERG,EAAOT,KAAOS,EAAOC,UAU1B,OACE,0BAAMV,KAAK,SAASW,SAPD,SAACC,GACpBA,EAAMC,iBACNf,EAAaQ,GACbC,EAAY,eAAKR,MAKf,+BACE,+BACE,4BACE,4BACE,2BACEe,GAAG,OACHd,KAAK,OACLe,KAAK,OACLC,YAAY,OACZC,UAAU,EACVC,SAAUV,EACVE,MAAOJ,EAASN,QAGpB,4BACE,2BACEc,GAAG,UACHd,KAAK,UACLe,KAAK,OACLC,YAAY,UACZC,UAAU,EACVC,SAAUV,EACVE,MAAOJ,EAASL,WAGpB,4BACE,2BACEa,GAAG,QACHd,KAAK,QACLe,KAAK,MACLC,YAAY,MACZC,UAAU,EACVC,SAAUV,EACVE,MAAOJ,EAASJ,SAGpB,4BACE,8BACEY,GAAG,cACHd,KAAK,cACLe,KAAK,OACLC,YAAY,cACZC,UAAU,EACVC,SAAUV,EACVE,MAAOJ,EAASH,aAPlB,SAYF,4BACE,8BACEW,GAAG,cACHd,KAAK,cACLe,KAAK,OACLC,YAAY,cACZC,UAAU,EACVC,SAAUV,EACVE,MAAOJ,EAASF,eAGpB,4BACE,4BAAQW,KAAK,UAAb,gBC6BCI,EAvHA,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACrCvB,EAAmDoB,EAAnDpB,KAAMC,EAA6CmB,EAA7CnB,QAASC,EAAoCkB,EAApClB,MAAOC,EAA6BiB,EAA7BjB,YAAaC,EAAgBgB,EAAhBhB,YAE3C,EAAoCC,mBAAS,eAAKe,IAAlD,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAwBpB,oBAAS,GAAjC,mBAAOqB,EAAP,KAAaC,EAAb,KAEMC,EAAa,SAACC,GACdH,GACAH,EAAa,CAACF,EAAOG,IAEzBG,GAASD,IAGLlB,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBgB,EAAc,2BACTD,GADQ,kBAEVf,EAAOT,KAAOS,EAAOC,UAI1B,OAAQgB,EAiCN,4BACE,4BACE,2BACEZ,GAAG,OACHd,KAAK,OACLe,KAAK,OACLC,YAAY,OACZC,UAAU,EACVC,SAAUV,EACVE,MAAOc,EAAWxB,QAGtB,4BACE,2BACEc,GAAG,UACHd,KAAK,UACLe,KAAK,OACLC,YAAY,UACZC,UAAU,EACVC,SAAUV,EACVE,MAAOc,EAAWvB,WAGtB,4BACE,2BACEa,GAAG,QACHd,KAAK,QACLe,KAAK,MACLC,YAAY,MACZC,UAAU,EACVC,SAAUV,EACVE,MAAOc,EAAWtB,SAGtB,4BACE,8BACEY,GAAG,cACHd,KAAK,cACLe,KAAK,OACLC,YAAY,cACZC,UAAU,EACVC,SAAUV,EACVE,MAAOc,EAAWrB,eAItB,4BACE,8BACEW,GAAG,cACHd,KAAK,cACLe,KAAK,OACLC,YAAY,cACZC,UAAU,EACVC,SAAUV,EACVE,MAAOc,EAAWpB,eAGtB,4BACE,4BAAQJ,KAAK,SAAS8B,QAASF,GAA/B,YA1FJ,4BACE,wBAAIG,UAAU,cACZ,2BAAI/B,IAEN,wBAAI+B,UAAU,cACZ,2BAAI9B,IAEN,wBAAI8B,UAAU,cACZ,yBAAKC,IAAK9B,EAAO+B,IAAKjC,KAExB,wBAAI+B,UAAU,cACZ,2BAAI5B,IAEN,wBAAI4B,UAAU,cACZ,2BAAI3B,IAEN,wBAAI2B,UAAU,cACVL,EAKA,4BAAQ1B,KAAK,SAAS8B,QAAS,kBAAIF,MAAnC,UAJA,4BAAQ5B,KAAK,OAAO8B,QAASF,GAA7B,QAQF,4BAAQ5B,KAAK,SAAS8B,QAASR,GAA/B,aClBOY,MA5Bf,YAA8D,IAAxCC,EAAuC,EAAvCA,QAASb,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aAKrCa,EAAUD,EAAQE,KAAI,SAACjB,EAAQC,GAAT,OAAmB,kBAAC,EAAD,CAAQiB,IAAKjB,EAAOD,OAAQA,EAAQC,MAAOA,EAAOC,aAAc,kBAAMA,EAAaD,IAAQE,aAAcA,OAExJ,OACE,yBAAKQ,UAAU,eACb,+BACE,+BACE,4BACE,oCACA,uCACA,qCACA,2CACA,2CACA,yCAGJ,+BACGK,MCFIG,EAjBI,CACjB,CACEvC,KAAM,uBACNC,QAAS,WACTC,MAAO,gGACPC,YAAa,sJACbC,YAAa,4RAEf,CACEJ,KAAM,YACNC,QAAS,UACTC,MAAO,4EACPC,YAAa,mNACbC,YAAa,kKCgBFoC,MA5Bf,WACE,MAA8BnC,mBAAS,YAAIkC,IAA3C,mBAAOJ,EAAP,KAAgBM,EAAhB,KAkBA,OACE,yBAAKV,UAAU,OACb,gCAAQ,uDACR,kBAAC,EAAD,CAAYI,QAASA,EAASb,aAZb,SAACoB,GACpBD,GAAW,SAACE,GAAD,OAAoBA,EAAeC,QAAO,SAACxB,EAAQC,GAAT,OAAmBA,IAAUqB,SAWtBnB,aARzC,SAACsB,GACpB,kBAAmCA,EAAnC,GAAOC,EAAP,KAAsBC,EAAtB,KACAN,GAAW,SAACE,GAAD,OAAoBA,EAAeN,KAAI,SAACjB,EAAQC,GAAT,OAAmBA,IAAUyB,EAAgBC,EAAY3B,WAOzG,kBAAC,EAAD,CAActB,aAjBG,SAACiD,GACpBN,GAAW,SAACO,GAAD,4BAAoBA,GAApB,CAAgCD,YCT/CE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.68f111e2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({ createRecipe }) {\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers\n  const initialForm = {\n    name: \"\",\n    cuisine: \"\",\n    photo: \"\",\n    ingredients: \"\",\n    preparation: \"\",\n  };\n\n  const [formData, setFormData] = useState({ ...initialForm });\n\n  const handleChange = ({ target }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    createRecipe(formData);\n    setFormData({ ...initialForm });\n  };\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                required={true}\n                onChange={handleChange}\n                value={formData.name}\n              />\n            </td>\n            <td>\n              <input\n                id=\"cuisine\"\n                name=\"cuisine\"\n                type=\"text\"\n                placeholder=\"Cuisine\"\n                required={true}\n                onChange={handleChange}\n                value={formData.cuisine}\n              />\n            </td>\n            <td>\n              <input\n                id=\"photo\"\n                name=\"photo\"\n                type=\"url\"\n                placeholder=\"URL\"\n                required={true}\n                onChange={handleChange}\n                value={formData.photo}\n              />\n            </td>\n            <td>\n              <textarea\n                id=\"ingredients\"\n                name=\"ingredients\"\n                type=\"text\"\n                placeholder=\"Ingredients\"\n                required={true}\n                onChange={handleChange}\n                value={formData.ingredients}\n              >\n                Test\n              </textarea>\n            </td>\n            <td>\n              <textarea\n                id=\"preparation\"\n                name=\"preparation\"\n                type=\"text\"\n                placeholder=\"Preparation\"\n                required={true}\n                onChange={handleChange}\n                value={formData.preparation}\n              ></textarea>\n            </td>\n            <td>\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React, { useState } from \"react\";\n\nconst Recipe = ({ recipe, index, handleDelete, handleUpdate }) => {\n  const { name, cuisine, photo, ingredients, preparation } = recipe;\n\n  const [updateForm, setUpdateForm] = useState({ ...recipe });\n  const [edit, setEdit] = useState(false);\n\n  const handleEdit = (e) => {\n    if (edit) {\n        handleUpdate([index, updateForm]);\n    }\n    setEdit(!edit);\n  };\n\n  const handleChange = ({ target }) => {\n    setUpdateForm({\n      ...updateForm,\n      [target.name]: target.value,\n    });\n  };\n\n  return !edit ? (\n    <tr>\n      <td className=\"content_td\">\n        <p>{name}</p>\n      </td>\n      <td className=\"content_td\">\n        <p>{cuisine}</p>\n      </td>\n      <td className=\"content_td\">\n        <img src={photo} alt={name} />\n      </td>\n      <td className=\"content_td\">\n        <p>{ingredients}</p>\n      </td>\n      <td className=\"content_td\">\n        <p>{preparation}</p>\n      </td>\n      <td className=\"content_td\">\n        {!edit ? (\n          <button name=\"edit\" onClick={handleEdit}>\n            Edit\n          </button>\n        ) : (\n          <button name=\"update\" onClick={()=>handleEdit()}>\n            Update\n          </button>\n        )}\n        <button name=\"delete\" onClick={handleDelete}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  ) : (\n    <tr>\n      <td>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          placeholder=\"Name\"\n          required={true}\n          onChange={handleChange}\n          value={updateForm.name}\n        />\n      </td>\n      <td>\n        <input\n          id=\"cuisine\"\n          name=\"cuisine\"\n          type=\"text\"\n          placeholder=\"Cuisine\"\n          required={true}\n          onChange={handleChange}\n          value={updateForm.cuisine}\n        />\n      </td>\n      <td>\n        <input\n          id=\"photo\"\n          name=\"photo\"\n          type=\"url\"\n          placeholder=\"URL\"\n          required={true}\n          onChange={handleChange}\n          value={updateForm.photo}\n        />\n      </td>\n      <td>\n        <textarea\n          id=\"ingredients\"\n          name=\"ingredients\"\n          type=\"text\"\n          placeholder=\"Ingredients\"\n          required={true}\n          onChange={handleChange}\n          value={updateForm.ingredients}\n        >\n        </textarea>\n      </td>\n      <td>\n        <textarea\n          id=\"preparation\"\n          name=\"preparation\"\n          type=\"text\"\n          placeholder=\"Preparation\"\n          required={true}\n          onChange={handleChange}\n          value={updateForm.preparation}\n        ></textarea>\n      </td>\n      <td>\n        <button name=\"update\" onClick={handleEdit}>\n          Update\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Recipe;\n","import React from \"react\";\nimport Recipe from \"./Recipe\"\n\nfunction RecipeList({ recipes, handleDelete, handleUpdate }) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked\n  const content = recipes.map((recipe, index) => <Recipe key={index} recipe={recipe} index={index} handleDelete={() => handleDelete(index)} handleUpdate={handleUpdate} />);\n\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {content}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\";\n\nfunction App() {\n  const [recipes, setRecipes] = useState([...RecipeData]);\n\n  // TODO: Add the ability for the <RecipeList /> component to list and delete an existing recipe.\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\n  \n  const createRecipe = (newRecipe) => {\n    setRecipes((curRecipes) => [...curRecipes, newRecipe]);\n  }\n\n  const deleteRecipe = (indexToDel) => {\n    setRecipes((currentRecipes) => currentRecipes.filter((recipe, index) => index !== indexToDel));\n  }\n\n  const updateRecipe = (newRecipeInfo) => {\n    const [indexToUpdate, newRecipe] = newRecipeInfo;\n    setRecipes((currentRecipes) => currentRecipes.map((recipe, index) => index === indexToUpdate ? newRecipe : recipe));\n  }\n  \n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>\n      <RecipeList recipes={recipes} handleDelete={deleteRecipe} handleUpdate={updateRecipe} />\n      <RecipeCreate createRecipe={createRecipe} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}